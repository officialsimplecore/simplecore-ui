{"version":3,"sources":["../simplecore-ui/src/lib/button/button.module.ts","../simplecore-ui/src/lib/_directives/pressable/pressable.ts","../simplecore-ui/src/lib/_directives/click-outside/click-outside.ts","./src/environments/environment.ts","../simplecore-ui/src/lib/input/public-api.ts","../simplecore-ui/src/lib/button/index.ts","../simplecore-ui/src/lib/modal/modal.ts","../simplecore-ui/src/lib/button/public-api.ts","../simplecore-ui/src/lib/_directives/pressable/pressable.module.ts","../simplecore-ui/src/lib/_directives/click-outside/public-api.ts","./src/app/app.component.ts","./src/app/app.component.html","../simplecore-ui/src/lib/card/card.ts","../simplecore-ui/src/lib/select/public-api.ts","./src/app/modal/modal.component.ts","./src/app/modal/modal.component.html","../simplecore-ui/src/lib/modal/public-api.ts","./src/app/app.module.ts","../simplecore-ui/src/lib/_directives/pressable/public-api.ts","../simplecore-ui/src/lib/card/index.ts","./src/app/button/button.component.ts","../simplecore-ui/src/lib/card/public-api.ts","../simplecore-ui/src/lib/card/card.module.ts","../simplecore-ui/src/lib/_directives/click-outside/click-outside.module.ts","../simplecore-ui/src/lib/input/input.module.ts","../simplecore-ui/src/lib/modal/modal.module.ts","../simplecore-ui/src/lib/input/input.ts","../simplecore-ui/src/lib/_directives/pressable/index.ts","./src/app/card/card.component.ts","./src/app/card/card.component.html","../simplecore-ui/src/lib/select/index.ts","../simplecore-ui/src/lib/_directives/click-outside/index.ts","./src/app/select/select.component.ts","./src/app/select/select.component.html","../simplecore-ui/src/lib/select/select.ts","../simplecore-ui/src/lib/select/select.module.ts","../simplecore-ui/src/lib/button/button.ts","../simplecore-ui/src/lib/input/index.ts","./src/app/forms/forms.component.ts","./src/app/forms/forms.component.html","./src/app/app-routing.module.ts","../simplecore-ui/src/lib/modal/index.ts","./src/app/input/input.component.ts","./src/app/input/input.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonDirective } from './button';\n\n@NgModule({\n  declarations: [ButtonDirective],\n  imports: [\n    CommonModule\n  ],\n  exports:[ButtonDirective]\n})\nexport class CoreButtonModule { }\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {Directive, ElementRef, HostListener, OnDestroy, OnInit, Renderer2} from \"@angular/core\";\n\n@Directive({\n  selector: '[corePressable]',\n  host: {\n    '(document:mouseup)': 'setPressed(false)'\n  }\n})\nexport class PressableDirective implements OnInit, OnDestroy {\n  constructor(private element: ElementRef, private renderer: Renderer2) {\n\n  }\n\n  // @HostListener('document:mouseup', ['$event'])\n  // clickStop() {\n  //   console.log(\"tset\")\n  //   this.setPressed(false);\n  // }\n\n  ngOnInit(): void {\n    this.renderer.setStyle(this.element.nativeElement, 'transition', 'transform 180ms ease-in-out')\n    this.element.nativeElement.addEventListener(\"mousedown\", () => {\n      this.setPressed(true);\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Clean up\n      // Remove event listeners causes problems with server side renderering\n      // Modern browsers do garbage collection (IE 10+) on Event Listeners so\n      // the practice of removing listeners is no longer necessary.\n    // this.element.nativeElement.removeAllListeners();\n  }\n\n  private setPressed(pressIn: boolean): void {\n    if (pressIn) {\n      this.renderer.setStyle(this.element.nativeElement, 'transform', 'scale(0.90)');\n    } else if (!pressIn) {\n      this.renderer.setStyle(this.element.nativeElement, 'transform', 'scale(1)');\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {Directive, ElementRef, EventEmitter, HostListener, Input, Output} from '@angular/core';\n\n@Directive({\n  selector: '[coreClickOutside]'\n})\nexport class ClickOutsideDirective {\n  constructor(private elementRef: ElementRef) {\n  }\n\n  @Input() coreClickOutside: boolean;\n\n  @Output()\n  public onClickOutside = new EventEmitter<MouseEvent>();\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n    if (!targetElement) {\n      return;\n    }\n\n    const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.onClickOutside.emit(event);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './input.module';\nexport * from './input';\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef, EventEmitter, Inject,\n  Input,\n  OnInit, Output, PLATFORM_ID,\n  Renderer2, ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isPlatformBrowser} from \"@angular/common\";\n\n@Component({\n  selector: 'core-modal',\n  exportAs: 'coreModal',\n  template: `\n    <div class=\"modal__container\" #modalElement *ngIf=\"open\">\n      <div class=\"modal\" coreClickOutside (onClickOutside)=\"toggleModal(false)\">\n        <div class=\"title\" *ngIf=\"title\">\n          <h2><ng-content select=\"span[coreModalTitle]\"></ng-content></h2>\n        </div>\n        <div class=\"content\">\n          <ng-content></ng-content>\n        </div>\n        <div class=\"action\" *ngIf=\"action\">\n          <span>\n            <ng-content select=\"span[coreModalActionPrimary]\"></ng-content>\n          </span>\n          <span>\n            <ng-content select=\"span[coreModalActionSecondary]\"></ng-content>\n          </span>\n        </div>\n      </div>\n    </div>`,\n  styleUrls: ['modal.scss']\n})\nexport class CoreModal implements AfterViewInit {\n  @Input() open: boolean = false;\n  private isOpening: boolean = false;\n\n  @Input() action: boolean = false;\n  @Input() title: boolean = false;\n  @Input() actionPrimary: boolean = true;\n  @Input() actionSecondary: boolean = true;\n\n  @Output() primaryButtonPressed: EventEmitter<any> = new EventEmitter<any>();\n  @Output() secondaryButtonPressed: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild('modalElement') modalElement: ElementRef | undefined;\n\n  constructor(private renderer: Renderer2, @Inject(PLATFORM_ID) private readonly platformId: any) {\n  }\n\n  ngAfterViewInit(): void {\n    this.toggleModal(this.open);\n  }\n\n  public toggleModal(on: boolean): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!on && !this.isOpening) {\n      this.open = false;\n      // this.closeModal();\n    } else if (on) {\n      this.isOpening = true;\n      this.open = true;\n\n      // Delay\n      setTimeout(() => {\n        this.isOpening = false;\n      }, 10)\n    }\n  }\n\n  private openModal(): void {\n    this.renderer.setStyle(this.modalElement.nativeElement, \"display\", \"flex\");\n  }\n\n  private closeModal(): void {\n    this.renderer.setStyle(this.modalElement.nativeElement, \"display\", \"none\");\n  }\n}\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './button.module';\nexport * from './button';\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {PressableDirective} from './pressable';\n\n@NgModule({\n  declarations: [PressableDirective],\n  imports: [\n    CommonModule\n  ],\n  exports:[PressableDirective]\n})\nexport class CorePressableModule { }\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './click-outside.module';\nexport * from './click-outside';\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'simplecore-ui-docs';\n}\n","<div class=\"full-container\">\n  <div class=\"routes\">\n    <a routerLink=\"button\">Button</a>\n    <a routerLink=\"input\">Input</a>\n    <a routerLink=\"select\">Select</a>\n    <a routerLink=\"forms\">Forms</a>\n    <a routerLink=\"card\">Card</a>\n    <a routerLink=\"modal\">Modal</a>\n  </div>\n  <router-outlet></router-outlet>\n</div>\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit, Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: 'core-card',\n  exportAs: 'coreCard',\n  template: '<div #cardEl class=\"core-card\"><ng-content></ng-content></div>',\n  styleUrls: ['card.scss']\n})\nexport class CoreCard implements AfterViewInit {\n  @Input() neumorphic: boolean = true;\n  @ViewChild('cardEl') cardEl: ElementRef;\n\n  constructor(private renderer: Renderer2) {\n  }\n\n  // Find calculated width of the object to determine how to place the box shadow\n  ngAfterViewInit(): void {\n    const cardElement = this.cardEl.nativeElement;\n    if (this.neumorphic) {\n      const offset = cardElement.offsetHeight / 12;\n      const blurOffset = offset * 1.7;\n      this.renderer.setStyle(cardElement,\n        'box-shadow', `0px ${offset}px ${blurOffset}px rgba(0,0,0,0.12),\n              -0px -${offset}px ${blurOffset}px rgba(255,255,255,0.85)`);\n    } else {\n      this.renderer.addClass(cardElement, 'core-card__outline');\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './select.module';\nexport * from './select';\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {CoreModal} from \"simplecore-ui\";\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements AfterViewInit {\n  // Access modal to close it\n  @ViewChild('modal') modal: CoreModal;\n\n  // Access form element in template for values\n  @ViewChild('form') form: HTMLFormElement;\n\n  public modalOpen: boolean = false;\n\n  constructor() { }\n\n  ngAfterViewInit(): void {\n  }\n\n  public submitIt() {\n    this.modal.toggleModal(false);\n    this.logForm();\n    this.form.reset();\n  }\n\n  // Not that submission\n  private logForm() {\n    console.log(this.form.value);\n  }\n\n\n}\n","<button coreButton (click)=\"modal.toggleModal(true)\">Open Modal</button>\n\n<core-modal [open]=\"modalOpen\" #modal action=\"true\" title=\"true\">\n  <span coreModalTitle>My Modal</span>\n  <form #start #form=\"ngForm\" id=\"car-journal\">\n    <input name=\"firstName\" colorOverride=\"ffffff\" ngModel coreInput type=\"text\" id=\"name\" placeholder=\"Name\"/>\n    <label coreLabel for=\"name\">Name</label>\n    <select coreSelect name=\"test\" id=\"option\" ngModel colorOverride=\"ffffff\">\n      <option value=\"Volvo\">Volvo</option>\n      <option value=\"Saab\">Saab</option>\n      <option value=\"Mercedes\">Mercedes</option>\n      <option value=\"Audi\">Audi</option>\n    </select>\n    <label coreSelectLabel for=\"option\">Car Make</label>\n  </form>\n\n  <span coreModalActionPrimary>\n    <button type=\"submit\" form=\"car-journal\" coreButton size=\"sm\" themeColor=\"transparent\" (click)=\"submitIt()\">Submit</button>\n  </span>\n  <span coreModalActionSecondary>\n    <button coreButton type=\"submit\" form=\"car-journal\" size=\"sm\" themeColor=\"transparent\" (click)=\"modal.toggleModal(false)\">Cancel</button>\n  </span>\n</core-modal>\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './modal.module';\nexport * from './modal';\n","// Angular\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport {FormsModule} from \"@angular/forms\";\n\n// UI Modules\n\n// Components\nimport { AppComponent } from './app.component';\nimport {CoreButtonModule} from 'projects/simplecore-ui/src/lib/button/public-api';\nimport { ButtonComponent } from './button/button.component';\nimport { InputComponent } from './input/input.component';\nimport {CoreInputModule} from \"projects/simplecore-ui/src/lib/input\";\nimport { SelectComponent } from './select/select.component';\nimport {CoreSelectModule} from \"projects/simplecore-ui/src/lib/select\";\nimport { FormsComponent } from './forms/forms.component';\nimport { CardComponent } from './card/card.component';\nimport {CoreCardModule} from \"../../../simplecore-ui/src/lib/card\";\nimport {CorePressableModule} from \"../../../simplecore-ui/src/lib/_directives/pressable\";\nimport {ModalComponent} from \"./modal/modal.component\";\nimport {CoreModalModule} from \"../../../simplecore-ui/src/lib/modal\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n    InputComponent,\n    SelectComponent,\n    FormsComponent,\n    CardComponent,\n    ModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    CoreButtonModule,\n    CoreInputModule,\n    CoreSelectModule,\n    CoreCardModule,\n    CorePressableModule,\n    CoreModalModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './pressable.module';\nexport * from './pressable';\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './public-api';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  template: `\n    <button size=\"sm\" coreButton>Small</button>\n    <button size=\"md\" coreButton>Medium</button>\n    <button size=\"lg\" coreButton>Large</button>\n\n    <button themeColor=\"secondary\" size=\"sm\" coreButton>Small</button>\n    <button themeColor=\"transparent\" size=\"md\" coreButton>Medium</button>\n\n    <button size=\"lg\" corePressable coreButton>Large with Core Pressable</button>\n    <button size=\"md\" corePressable coreButton>Large with Core Pressable</button>\n    <button size=\"sm\" corePressable coreButton>Smallest</button>\n\n  `,\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './card.module';\nexport * from './card';\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {CoreCard} from \"./card\";\n\n@NgModule({\n  declarations: [CoreCard],\n  imports: [\n    CommonModule\n  ],\n  exports:[CoreCard]\n})\nexport class CoreCardModule { }\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ClickOutsideDirective} from \"./click-outside\";\n\n@NgModule({\n  declarations: [ClickOutsideDirective],\n  imports: [\n    CommonModule\n  ],\n  exports:[ClickOutsideDirective]\n})\nexport class CoreClickOutsideModule { }\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {CoreInput, CoreLabel} from './input';\n\n@NgModule({\n  declarations: [CoreInput,CoreLabel],\n  imports: [\n    CommonModule\n  ],\n  exports:[CoreInput,CoreLabel]\n})\nexport class CoreInputModule { }\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {CoreModal} from \"./modal\";\nimport {CoreClickOutsideModule} from \"../_directives/click-outside\";\nimport {CoreButtonModule} from \"../button\";\n\n@NgModule({\n  declarations: [CoreModal],\n  imports: [\n    CommonModule,\n    CoreClickOutsideModule,\n    CoreButtonModule\n  ],\n  exports: [CoreModal]\n})\nexport class CoreModalModule { }\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: 'input[coreInput]',\n  exportAs: 'coreInput',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['input.scss'],\n  host: {\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CoreInput implements OnInit {\n  @Input() appearance: string = \"outline\";\n  @Input() colorOverride: string | undefined;\n\n  constructor(private element: ElementRef, private renderer: Renderer2) {\n  }\n  ngOnInit(): void {\n\n    switch(this.appearance) {\n      case 'outline':\n        // this.element.nativeElement.classList.add(\"core-input__outline\");\n        this.renderer.addClass(this.element.nativeElement, \"core-input__outline\");\n        break;\n      case 'standard':\n        // this.element.nativeElement.classList.add(\"core-input__standard\");\n        this.renderer.addClass(this.element.nativeElement, \"core-input__standard\");\n        break;\n    }\n\n    this.overrideBackgroundColor();\n  }\n\n  private overrideBackgroundColor(): void {\n    if (this.colorOverride) {\n      this.renderer.setStyle(this.element.nativeElement, \"background-color\", `#${this.colorOverride}`);\n      this.renderer.setStyle(this.element.nativeElement.nextElementSibling, \"background-color\", `#${this.colorOverride}`);\n    }\n  }\n}\n\n@Component({\n  selector: 'label[coreLabel]',\n  exportAs: 'coreLabel',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['input.scss'],\n  host: {\n    'class': 'core-label',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CoreLabel implements OnInit {\n  constructor() {\n  }\n  ngOnInit(): void {\n  }\n}\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './public-api';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"neu-card\">\n<core-card [neumorphic]=\"true\">\n  <h1>Test Neumorphic Styled Card</h1>\n</core-card>\n<core-card [neumorphic]=\"false\">\n  <h1>Outline Styled Card</h1>\n</core-card>\n</div>\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './public-api';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<select coreSelect>\n  <option value=\"volvo\">Volvo</option>\n  <option value=\"saab\">Saab</option>\n  <option value=\"mercedes\">Mercedes</option>\n  <option value=\"audi\">Audi</option>\n</select>\n","/**\n * @license\n * Copyright 2021 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef, Inject,\n  Input, OnDestroy,\n  OnInit, PLATFORM_ID,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isPlatformBrowser} from \"@angular/common\";\n\n@Component({\n  selector: 'select[coreSelect]',\n  exportAs: 'coreSelect',\n  template: '<div class=\"core-select-arrow\"><svg viewBox=\"0 0 24 24\" role=\"presentation\" class=\"chakra-select__icon\" focusable=\"false\" aria-hidden=\"true\" style=\"width: 1em; height: 1em; color: currentcolor;\"><path fill=\"currentColor\" d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path></svg></div><option class=\"core-select__placeholder-option\" value=\"\" disabled selected=\"selected\">{{corePlaceholderText}}</option><ng-content></ng-content>',\n  styleUrls: ['select.scss'],\n  host: {\n    'class': 'core-select',\n  },\n  encapsulation: ViewEncapsulation.None\n})\nexport class CoreSelect implements OnInit, OnDestroy {\n  @Input() corePlaceholderText: string = \"Select options\";\n  @Input() colorOverride: string | undefined;\n\n  private mutationObserver = new MutationObserver(() => {\n    this.applyLabelFloat();\n  });\n\n  constructor(private renderer: Renderer2,\n              private element: ElementRef,\n              @Inject(PLATFORM_ID) private readonly platformId: any) {\n  }\n  ngOnInit(): void {\n    this.listenToFloatLabel(); // May be unnecessary but further testing is needed.\n    this.overrideBackgroundColor();\n\n    // Only run this if on browser\n    if (isPlatformBrowser(this.platformId)) {\n      // Create a mutation observer to check for more changes than value changes\n      // The default HTML form reset event does not trigger the change event, but does trigger a mutation\n      this.mutationObserver.observe(\n        this.element.nativeElement,\n        { attributes: true }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      // Disconnect from observer on destroy\n      this.mutationObserver.disconnect();\n    }\n  }\n\n\n  /* Add event listener to for select change to determine if float is needed */\n  /* Candidate for deprecation */\n  private listenToFloatLabel(): void {\n    this.element.nativeElement.addEventListener(\"change\", () => {\n      this.applyLabelFloat();\n    });\n  }\n\n  /* Check if the label should be floating depending on the placeholder element\n  *  and change classes if necessary */\n  private applyLabelFloat(): void {\n    const floatingLabelElement = this.element.nativeElement.nextElementSibling;\n    if (!floatingLabelElement) {\n      return;\n    }\n\n    const placeholderOptionElement = this.element.nativeElement;\n    const placeholderSelected = placeholderOptionElement.selectedIndex <= 0;\n      // HTML form reset event sets index = -1\n      // Placeholder is at index = 0\n    if (!placeholderSelected) {\n      this.renderer.addClass(floatingLabelElement, \"core-select-label__floating\");\n    } else {\n      this.renderer.removeClass(floatingLabelElement, \"core-select-label__floating\");\n    }\n  }\n\n  /* Sets input background color  */\n  public overrideBackgroundColor(): void {\n    if (this.colorOverride) {\n      this.renderer.setStyle(this.element.nativeElement, \"background-color\", `#${this.colorOverride}`);\n      this.renderer.setStyle(this.element.nativeElement.nextElementSibling, \"background-color\", `#${this.colorOverride}`);\n    }\n  }\n}\n\n@Component({\n  selector: 'label[coreSelectLabel]',\n  exportAs: 'coreSelectLabel',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['select.scss'],\n  host: {\n    'class': 'core-select-label',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CoreSelectLabel implements OnInit {\n  constructor() {\n  }\n  ngOnInit(): void {\n  }\n}\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {CoreSelect, CoreSelectLabel} from './select';\n\n@NgModule({\n  declarations: [CoreSelect,CoreSelectLabel],\n  imports: [\n    CommonModule\n  ],\n  exports:[CoreSelect,CoreSelectLabel]\n})\nexport class CoreSelectModule { }\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: 'button[coreButton]',\n  exportAs: 'coreButton',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['button.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonDirective implements OnInit {\n  @Input() size: string = 'md';\n  @Input() themeColor: string = 'primary';\n\n  constructor(private renderer: Renderer2, private element: ElementRef) {\n  }\n  ngOnInit(): void {\n    this.renderer.addClass(this.element.nativeElement, \"core-button\");\n\n    switch(this.size) {\n      case \"sm\": // Small\n        this.renderer.addClass(this.element.nativeElement, \"core-button__size-sm\");\n        break;\n      case \"lg\": // Large\n        this.renderer.addClass(this.element.nativeElement, \"core-button__size-lg\");\n        break;\n      default: // (md) Medium\n        this.renderer.addClass(this.element.nativeElement, \"core-button__size-md\");\n        break;\n    }\n\n    switch (this.themeColor) {\n      case \"secondary\":\n        this.renderer.addClass(this.element.nativeElement, \"core-button__background-secondary\");\n        break;\n      case \"transparent\":\n        this.renderer.addClass(this.element.nativeElement, \"core-button__transparent\");\n        break;\n      default: // Primary\n        this.renderer.addClass(this.element.nativeElement, \"core-button__background-primary\");\n        break;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './public-api';\n","import {Component, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.scss']\n})\nexport class FormsComponent implements OnInit {\n\n  @ViewChild('form') form: HTMLFormElement;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  logForm(value: any) {\n    console.log(value);\n    this.form.reset();\n  }\n}\n","\n<form #form=\"ngForm\" (ngSubmit)=\"logForm(form.value)\">\n  <input name=\"firstName\" ngModel coreInput type=\"text\" id=\"name\" placeholder=\"Name\"/>\n  <label coreLabel for=\"name\">Name</label>\n  <select coreSelect name=\"Test\" id=\"option\" ngModel>\n    <option value=\"volvo\">Volvo</option>\n    <option value=\"saab\">Saab</option>\n    <option value=\"mercedes\">Mercedes</option>\n    <option value=\"audi\">Audi</option>\n  </select>\n  <label coreSelectLabel for=\"option\">Car Make</label>\n  <div></div>\n  <button coreButton type=\"submit\">Submit</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ButtonComponent} from \"./button/button.component\";\nimport {InputComponent} from \"./input/input.component\";\nimport {SelectComponent} from \"./select/select.component\";\nimport {FormsComponent} from \"./forms/forms.component\";\nimport {CardComponent} from \"./card/card.component\";\nimport {ModalComponent} from \"./modal/modal.component\";\n\nconst routes: Routes = [\n  {path: 'button', component: ButtonComponent},\n  {path: 'input', component: InputComponent},\n  {path: 'select', component: SelectComponent},\n  {path: 'forms', component: FormsComponent},\n  {path: 'card', component: CardComponent},\n  {path: 'modal', component: ModalComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * @license\n * Copyright 2020 SimpleCore All Rights Reserved.\n *\n * Use of this source code is governed private licensing for\n * internal SimpleCore projects\n */\n\nexport * from './public-api';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<input id=\"name\" coreInput placeholder=\"Test\"/>\n<label for=\"name\" coreLabel>Test</label>\n<div class=\"white-background\">\n  <input id=\"name2\" appearance=\"standard\" coreInput placeholder=\"Test\"/>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}